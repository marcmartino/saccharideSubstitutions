!function(t){var e={};function i(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)i.d(n,r,function(e){return t[e]}.bind(null,r));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e){var i=this&&this.__spreadArrays||function(){for(var t=0,e=0,i=arguments.length;e<i;e++)t+=arguments[e].length;var n=Array(t),r=0;for(e=0;e<i;e++)for(var a=arguments[e],s=0,u=a.length;s<u;s++,r++)n[r]=a[s];return n};(void 0)("txtMatricies",[],(function(t,e){"use strict";var n,r,a,s,u,o;e&&e.id;return{setters:[],execute:function(){n=function(t){return"number"==typeof t?t:t[0]/t[1]},t("determinant",r=function(t){var e=t[0],r=t[1],a=i(e,r).map(n),s=a[0],u=a[1],o=a[2];return s*a[3]-u*o}),t("scalarMult",a=function(t,e){var i=e[0],n=i[0],r=i[1],a=e[1],u=a[0],o=a[1];return[[s(t,n),s(t,r)],[s(t,u),s(t,o)]]}),t("numberMult",s=function(t,e){return"number"==typeof t?"number"==typeof e?t*e:[t*e[0],e[1]]:"number"!=typeof e?[e[0]*t[0],t[1]*e[1]]:1===t[0]?[e,t[1]]:n(t)*n(e)}),t("inverse",u=function(t){var e=t[0],i=e[0],n=e[1],u=t[1],o=u[0],l=u[1],c=r([[i,n],[o,l]]);if(0===c)throw new Error("Determinant of 0; cannot find inverse");return a([1,c],[[l,s(-1,n)],[s(-1,o),i]])}),t("pairTimesTxt",(function(t,e){var i=e[0],r=i[0],a=i[1],u=e[1],o=u[0],l=u[1];return[n(s(t[0],r))+n(s(t[1],o)),n(s(t[0],a))+n(s(t[1],l))]})),t("txtTimesPair",o=function(t,e){var i=t[0],r=i[0],a=i[1],u=t[1],o=u[0],l=u[1];return[n(s(e[0],r))+n(s(e[1],a)),n(s(e[0],o))+n(s(e[1],l))]}),t("solveSystem",(function(t,e){return o(u(e),t)}))}}})),(void 0)("util",[],(function(t,e){"use strict";e&&e.id;return{setters:[],execute:function(){t("frst",(function(t){return t[0]})),t("snd",(function(t){return t[1]})),t("thrd",(function(t){return t[2]})),t("head",(function(t){return t.length?t[0]:[]})),t("tail",(function(t){return t.slice(1)}))}}})),(void 0)("equations",["txtMatricies","util"],(function(t,e){"use strict";var n,r,a,s,u;e&&e.id;return{setters:[function(t){n=t},function(t){r=t}],execute:function(){a=function(t,e){var i=t[0],n=t[1];return[[i,e[0]],[n,e[1]]]},t("calculateSubstitutionOptions",(function(t,e,i){var n=a(e,i),r=n[0],s=n[1];return u(t,r,s)})),t("isInvalidSolution",s=function(t){return function(e){return e<0||e>t||parseFloat(e.toFixed(5))!==e}}),t("solveForMaximumAtHead",u=function(t,e,a){var o=e[0]-a[0][0]*t,l=e[1]-a[1][0]*t,c=r.tail(a[0]),f=r.tail(a[1]);if(r.tail(a[0]).length>2){var d=u(200,[o,l],[c,f]);return d?(console.log("found a working maxima",i([t],d)),i([t],d)):(console.log(" maxima was non working"),t>=0&&u(t-.5,e,a))}try{var m=n.solveSystem([o,l],[c,f]);console.log("solved system calculated",m);var p=m.map((function(t){return parseFloat(t.toFixed(6))}));return 0===p.filter(s(t)).length&&i([t],p)}catch(e){return console.log("solve system catch "+t,e),!1}})}}})),(void 0)("index",["util","equations"],(function(t,e){"use strict";e&&e.id;return{setters:[function(t){t},function(t){t}],execute:function(){}}})),(void 0)("tests/equations.test",["equations","chai"],(function(t,e){"use strict";var i,n;e&&e.id;return{setters:[function(t){i=t},function(t){n=t}],execute:function(){describe("solving for a possible substitution",(function(){it("solution predicate should be accurate",(function(){n.assert.isFalse(i.isInvalidSolution(100)(100),"maximum should be valid"),n.assert.isFalse(i.isInvalidSolution(100)(0),"minimum should be valid"),n.assert.isTrue(i.isInvalidSolution(100)(101),"over maximum should be true"),n.assert.isTrue(i.isInvalidSolution(100)(-1),"less than zero should be true"),n.assert.isTrue(i.isInvalidSolution(100)(2/3),"repeating decimal should be true"),n.assert.isFalse(i.isInvalidSolution(100)(1.5),"non-repeating decimal should be false")})),it("should emphasize the first value",(function(){n.assert.deepEqual(i.solveForMaximumAtHead(60,[15,20],[[10,0],[5,20]]),[7,10],"simple substitution")}))}))}}})),(void 0)("tests/txtMatricies.test",["chai","txtMatricies"],(function(t,e){"use strict";var i,n,r,a,s;e&&e.id;return{setters:[function(t){i=t},function(t){n=t}],execute:function(){r=[[1,2],[3,4]],a=[[4,5],[4,5]],s=[[[1,2],[2,2]],[[3,2],[4,2]]],describe("2x2 matrix algebra",(function(){it("should calculate basic determinants",(function(){i.assert.equal(n.determinant(r),-2,"two by two matrix determinant"),i.assert.equal(n.determinant(a),0,"two by two matrix determinant in zero case"),i.assert.equal(n.determinant([[4,6],[3,8]]),14,"2x2 det example"),i.assert.equal(n.determinant(s),-.5,"determinant with fraction values in the matrix")})),it("should do scalar multiplication",(function(){i.assert.deepEqual(n.scalarMult(2,r),[[2,4],[6,8]],"basic scalar multiplication on matrix"),i.assert.deepEqual(n.scalarMult(3,s),[[[3,2],[6,2]],[[9,2],[12,2]]],"scalar multiplication on a matrix of fractions"),i.assert.deepEqual(n.scalarMult([1,3],a),[[[4,3],[5,3]],[[4,3],[5,3]]],"fractional multiplication of a matrix"),i.assert.deepEqual(n.scalarMult([1,2],s),[[[1,4],[2,4]],[[3,4],[4,4]]],"fraction filed matrix times a fraction scalar")})),it("should find matrix inverses",(function(){i.assert.deepEqual(n.inverse(r),[[[4,-2],[-2,-2]],[[-3,-2],[1,-2]]],"basic inverse"),i.assert.deepEqual(n.inverse(s),[[[4,-1],[-2,-1]],[[-3,-1],[1,-1]]],"inverse of matrix with fraction values")})),it("should multiply a 2x1 matrix by a 2x2",(function(){i.assert.deepEqual(n.pairTimesTxt([1,2],r),[7,10],"basic pair times 2x2 multiplication"),i.assert.deepEqual(n.pairTimesTxt([1,2],s),[3.5,5],"pair times 2x2 of fractions multiplication"),i.assert.deepEqual(n.pairTimesTxt([[1,2],[2,3]],r),[2.5,11/3],"fraction pair times 2x2 multiplication"),i.assert.deepEqual(n.pairTimesTxt([[1,2],[2,3]],s),[5/4,11/6],"fraction pair times 2x2 of fractions multiplication")})),it("should multiply a 2x2 matrix by a 2x1",(function(){i.assert.deepEqual(n.txtTimesPair(r,[1,2]),[5,11],"basic pair times 2x2 multiplication"),i.assert.deepEqual(n.txtTimesPair(s,[1,2]),[2.5,5.5],"pair times 2x2 of fractions multiplication"),i.assert.deepEqual(n.txtTimesPair(r,[[1,2],[1,2]]),[1.5,3.5],"fraction pair times 2x2 multiplication"),i.assert.deepEqual(n.txtTimesPair(s,[[1,2],[1,2]]),[.75,7/4],"fraction pair times 2x2 of fractions multiplication")})),it("should solve two by two systems",(function(){i.assert.deepEqual(n.solveSystem([10,3],r),[-17,13.5],"basic numeric system of equations")}))}))}}}))}]);